/*
Copyright (C) 2009 Scott Grauer-Gray, Chandra Kambhammettu, and Kannappan Palaniappan
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
*/


GPU Implementation of Belief Propagation for stereo using CUDA

S. Grauer-Gray, C. Kambhammettu, and K.Palaniappan

This README describes an implementation of the CUDA belief propagation algorithm described in our paper 
"GPU implementation of belief propagation using CUDA for cloud tracking and reconstruction" which was 
published at the 2008 IAPR Workshop on Pattern Recognition in Remote Sensing (PRRS 2008) and can be 
found at the following address: http://scottgg.net/cudaBeliefProp.pdf.  Please cite this 
work if using any of this code as part of a research paper or other work.

Will note that there have been changes from the initial implementation as presented in the paper, both for optimizations
and to work on the latest NVIDIA GPUs with the latest CUDA toolkits.  Also, the motion estimation portion of the code
was removed to narrow the focus of this work (though could certainly be added back in the future).  The additional
optimizations are described in http://scottgg.net/OptimizingGlobalStereoMatchingOnNVIDIAGPUs.pdf.  The original code 
is available at http://scottgg.net/beliefPropCodePost.zip.

This code is distributed using the GNU General Public License, so any derivative work which 
is distributed must also contain this license.

Please email comments and bug reports to: sgrauerg@gmail.com (or sgrauerg@udel.edu)


Usage:

This code runs belief propagation for stereo vision on the GPU using CUDA on Linux-based systems (and the code 
can be modified to work on Windows/Macs).

The parameters are defined in the file bpStereoCudaParameters.cuh and are documented in that file and the paper.  
In order to compile/re-compile the program, navigate to the directory with the files (this one...) and run "make clean" and 
"make".  Note that the cuda installation must have a symbolic link to /usr/local/cuda/ for the Makefile to work as is.

The Tsukuba stereo set is included as part of this folder as a sample program.  In order to test the implementation on this 
stereo set using the initial parameters as defined in bpStereoCudaParameters.cuh, perform the following steps:

1.  Set the PATH and LD_LIBRARY_PATH to the necessary paths needed to run CUDA programs (usually PATH is appended with $CUDA_DIR/bin 
and LD_LIBRARY_PATH=$CUDA_DIR/lib or LD_LIBRARY_PATH=$CUDA_DIR/lib64.

2.  Navigate to the folder with all the implementation files (including this README...)

3.  Execute the commands "make clean" and "make" on the command line (Note that the current Makefile compiles specifically for compute
capabilities 6.0, 6.1, 7.0, and 7.5, which correspond to Pascal, Volta, and Turing architecture discrete GPUs.  May need to make
adjustments to run on other NVIDIA GPUs or to run on SOCs such as the Jetson TX1/2).

4.  The executable named "driverCudaBp" should now be created, so call ./driverCudaBp to run the implementation on the Tsukuba sets.
The implementation is run multiple times to more accuracy guage the runtime, with the median GPU runtime given.  The CPU
implementation code from http://cs.brown.edu/people/pfelzens/bp/index.html is also run with the runtime given.

5.  The GPU and CPU runtimes are output in the terminal also with the location of the output disparity maps.  More detailed info
including input parameters, detailed timings, and output disparity maps comparison to ground truth are in output.txt file (in the
same folder as the driverCudaBp executable).

6.  In order to adjust the parameters to run on different input or different parameters, adjust the desired parameters in 
bpStereoCudaParameters.cuh, run "make clean" and "make" to compile to the program with the adjusted parameters, then call
./driverCudaBp to run the program with the adjusted parameters.

7.  The runCudaBeliefProp.py script can be used to run many tests with different parameters, including running the implementation with
different stereo sets and/or the same stereo set with different input parameters and/or optimization settings.  If using this script,
set the #define IMAGE_SET_TO_PROCESS in bpStereoCudaParameters.cuh to IMAGE_SET_PARAMETERS_FROM_PYTHON (defined in file).
